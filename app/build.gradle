plugins {
    id 'com.android.application'
}

printf("hello world .......")
println(" who are you boy .... ")

//def androidID = rootProject.ext.androidId
//def applicationID = rootProject.ext.applicationId
//def dependencyID = rootProject.ext.dependencyId
//def url = rootProject.ext.url

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion

    defaultConfig {
        applicationId ApplicationId.app
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        // 在gradle文件中配置选项参数值（用于APT传参接收）
        javaCompileOptions {
            annotationProcessorOptions {
                // project.getName() == app
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "ServerUrl", "\"${url.debug}\"")
        }
        release {
            buildConfigField("String", "ServerUrl", "\"${url.release}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    //循环引入
    dependencyId.each { key, value ->
        implementation(value)
    }
    implementation project(":arouter-annotations")
    annotationProcessor project(":arouter-compiler")
    // 公共基础库
    implementation project(':common')
    if (isRelease) {
        implementation project(':mine')
        implementation project(':home')
        implementation project(':news')
    }
}